extern printf;
extern scanf;

;************************************************************
section .text
;************************************************************
global main;												*
main:;														*
	call _pobierz1;											*
	call _pobierz2;											*
	call _sumuj;											*
	call _wypisz;											*
	jmp _exit;												*
;************************************************************
	
;************************************************************
_sumuj:;													*
	mov rax, [liczba1];										*
	mov rbx, [liczba2];										*
	add rax, rbx;											*
	mov [wynik], rax;										*
	ret;													*
;************************************************************

;************************************************************	
_wypisz:;													*
	xor rax, rax;											*
	mov rsi, [wynik];										*
	mov rdi, format_out;									*
	call printf;											*
	ret;													*
;************************************************************
	
	
;************************************************************
_pobierz1:;													*
	mov rdi, format;										*
	mov rsi, liczba1;										*
	xor rax, rax;											*
	call scanf;												*
	ret;													*
;************************************************************
;************************************************************
_pobierz2:;													*
	mov rdi, format;										*
	mov rsi, liczba2;										*
	xor rax, rax;											*
	call scanf;												*
	ret;													*
;************************************************************


;************************************************************
_exit:;														*
	mov rax, 1;												*
	mov rbx, 0;												*
	int 80h;												*
;************************************************************

section .data	
	wynik:	dd	0
	liczba1:	dd	0
	liczba2:	dd	0
	format:	db	'%d',0
	format_out:	db	'%d',10,0
	
	wynik_tekst:	db	'Wynik: ',0
	
