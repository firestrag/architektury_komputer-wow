;************************************************************
extern scanf;												*
extern printf;												*
;************************************************************

;************************************************************
section .text;												*
;************************************************************
global main;												*
;-----------------------------------------------------------*
main:;														*
	call _pobierz;											*

	mov eax, [liczba]
	cmp eax, 15
	jl ._nie

	cmp eax, 25
	jg ._nie

	mov rax, w
	call _wypisz

	jmp _exit;												*
._nie:
	mov rax, nie
	call _wypisz
	jmp _exit
;************************************************************

;************************************************************
_exit:;														*
	mov rax, 1;												*
	mov rbx, 0;												*
	int 80h;												*
;************************************************************

;************************************************************
; rax - wska≈∫nik											*
;-----------------------------------------------------------*
_wypisz:;													*
	mov rsi, rax;											*
	mov rdi, format_out;									*
	xor rax, rax;											*
	call printf;											*
	ret;													*
;************************************************************

;************************************************************	
_pobierz:;													*
	mov rsi, liczba;										*
	mov rdi, format_in;										*
	xor rax, rax;											*
	call scanf;												*
	ret;													*
;************************************************************



;************************************************************
section .data;												*
	liczba: dd 0;											*
	format_in: db '%d',0;									*
	format_out: db '%s',10,0;								*
	w: db 'Liczba w przedziale',10,0;						*
	nie: db 'Liczba nie w przedziale',10,0;					
;************************************************************

