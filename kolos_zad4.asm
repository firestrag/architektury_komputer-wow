;************************************************************
extern scanf;												*
extern printf;												*
;************************************************************

;************************************************************
section .text;												*
;************************************************************
global main;												*
;-----------------------------------------------------------*
main:;														*
	call _pobierz;											*
	mov eax, [liczba];										*
	cmp eax, 0;												*
	jl _exit;												*
;-----------------------------------------------------------*
._loop:;													*
	mov ebx, [liczba];										*
	mov eax, [index];										*
	cmp eax, ebx;											*
	je _exit;												*
;															*
	xor edx, edx;											*
	mov ebx, 3;												*
	div ebx;												*
	cmp edx, 0; reszta z dzielenia,							*
;				 eax - ca≈Çkowity wynik z dzielenia			*
	jne ._next;												*
;															*
	xor edx, edx;											*
	mov ebx, 5;												*
	div ebx;												*
	cmp edx, 0; 											*
	jne ._next;												*
;															*
	mov rax, [index];										*
	call _wypisz;											*
	jmp ._next;												*
;															*
	jmp _exit;												*
;-----------------------------------------------------------*
._next:;													*
	mov eax, [index];										*
	inc eax;												*
	mov [index], eax;										*
	jmp ._loop;												*
;************************************************************

;************************************************************
_exit:;														*
	mov rax, 1;												*
	mov rbx, 0;												*
	int 80h;												*
;************************************************************

;************************************************************	
_wypisz:;													*
	mov rsi, rax;											*
	mov rdi, format_out;									*
	xor rax, rax;											*
	call printf;											*
	ret;													*
;************************************************************

;************************************************************	
_pobierz:;													*
	mov rsi, liczba;										*
	mov rdi, format_in;										*
	xor rax, rax;											*
	call scanf;												*
	ret;													*
;************************************************************



;************************************************************
section .data;												*
	liczba: dd 0;											*
	index: dd 0;											*
	format_in: db '%d',0;									*
	format_out: db '%d',10,0;								*
;************************************************************

